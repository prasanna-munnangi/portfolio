{"data":{"projects":{"edges":[{"node":{"frontmatter":{"title":"Upload new attachments and migrate legacy attachments to AWS S3","tech":["Ruby on Rails","Carrierwave gem","AWS"],"github":"","external":""},"html":"<p>Utilized Rails carrierwave gem to upload new attachments to AWS S3, and migrated legacy attachments from Mongodb to AWS S3 buckets.</p>"}},{"node":{"frontmatter":{"title":"Bid Analytics Dashboard","tech":["Ruby on Rails","Rest API","Vue Js","Google Maps API"],"github":"","external":""},"html":"<p>Built Analytics dashboard for the agencies to view the bidders statistics, including google map integration of the bidder location.</p>"}},{"node":{"frontmatter":{"title":"Test suite parallelization to decrease pipeline run time","tech":["Ruby on Rails","AWS CodePipeline","Parallel test gem"],"github":"","external":""},"html":"<p>Introduced parallel_tests gem and implemented parallelization of rails tests and made test suite run 6 times faster.</p>"}},{"node":{"frontmatter":{"title":"Photos application to view construction progress","tech":["Vue Js","Vuex","Rest API","Bootstrap CSS","Google Maps API"],"github":"","external":""},"html":"<p>Developed a grid view of photos, album feature and capability to see where the photos were uploaded using google API.</p>"}},{"node":{"frontmatter":{"title":"Email sending UI for marketing automation platform","tech":["React","Apollo","GraphQL","Nodejs","TypeScript","Ant"],"github":"","external":""},"html":"<p>Built UI using React JS framework, Ant framework React components and Apollo for state management. Used graphql, with nodejs on the backend.</p>"}},{"node":{"frontmatter":{"title":"Improve performance of the webpage using memcached","tech":["PHP","Memcached","Ajax","HTML","CSS"],"github":"","external":""},"html":"<p>Created a smooth transition of screen using Ajax loading and stored compute intensive task on memcached with an expiry limit. Also added capability\nto delete the memcache before expiry, if any transaction made the cache obselete.</p>"}}]}}}